{
  "name": "Doggo_lens_n8n_workflow",
  "nodes": [
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "text": "=Dog Analysis Report üê∂\nThis is a comprehensive visual analysis of the dog in the provided image. The following report details the dog's physical characteristics, estimated breed, and unique identifying features.\n\n## Physical Characteristics\nOverall Appearance: The dog is medium-sized with a healthy build. It has friendly, hazel-colored eyes.\n\nCoat and Color: Its fur is short and smooth. The primary color of the coat is brown, with significant white secondary markings.\n\nDistinctive Features: The dog has long, floppy ears and a curled tail, which are prominent features.\n\n## Breed and Health Assessment\nBreed Estimation: The analysis indicates a high probability that the dog is a Beagle (78% confidence). It may also be a Beagle Mix (65% confidence).\n\nAge and Health: Based on visual cues, the dog appears to be a young adult. It looks to be in healthy physical condition.\n\n## Unique Identifying Marks\nKey Identifiers: This dog can be easily recognized by a few unique markings. It has a notable white patch on its chest and distinctive black-tipped ears.",
        "inputType": "binary",
        "binaryPropertyName": "image",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2224,
        352
      ],
      "id": "205a4a08-fd71-4ff9-9fa1-22eda81ae110",
      "name": "Analyze image1",
      "credentials": {
        "googlePalmApi": {
          "id": "WaVuPN6APHkiH6q8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "47a93820-b180-4665-b436-f1072e45d004",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2512,
        352
      ],
      "id": "d1ce34aa-dad1-4c2a-a649-c260305c1adb",
      "name": "Webhook",
      "webhookId": "47a93820-b180-4665-b436-f1072e45d004"
    },
    {
      "parameters": {
        "jsCode": "// Get the AI output string from the first input item\nconst aiOutput =  $input.first().json.output;// Replace \"ai_output\" with the actual field name where your text is stored\n\nfunction extractJsonFromText(text) {\n  try {\n    // Match the first { ... } block in the text\n    const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n    if (!jsonMatch) throw new Error(\"No JSON object found in text\");\n\n    // Parse the JSON\n    const parsed = JSON.parse(jsonMatch[0]);\n\n    return parsed;\n  } catch (error) {\n    throw new Error(\"Failed to parse JSON from AI output: \" + error.message);\n  }\n}\n\n// Extract the clean JSON object\nconst result = extractJsonFromText(aiOutput);\n\n// Return the parsed JSON as the node's output\nreturn [\n  {\n    json: result\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1664,
        352
      ],
      "id": "4dd6eb61-9146-4f1b-993c-ab8a21a0825b",
      "name": "Code"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1rqVifGH2bI97C_zFbWkTkngx4DMSEgpb",
          "mode": "list",
          "cachedResultName": "doggo_lens",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1rqVifGH2bI97C_zFbWkTkngx4DMSEgpb"
        },
        "event": "fileCreated",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -2480,
        1104
      ],
      "id": "840e14bc-c427-4df3-a7fb-ee7fa28d2693",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "j3IAQGD1lYDvHiOW",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2208,
        1104
      ],
      "id": "f69281b7-0304-408d-9043-292faa72e054",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cb76f0e1-01e0-4cc0-96ef-67a0f13c4878",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "6ad660bd-3ba8-46ce-83b1-c71d4bdd29d1",
              "name": "file_name",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "d0652163-0338-4139-a334-67d3322b132e",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2032,
        1264
      ],
      "id": "1a054675-6f4a-4b7a-a74c-0a51d030761b",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "text": "=Dog Analysis Report üê∂\nThis is a comprehensive visual analysis of the dog in the provided image. The following report details the dog's physical characteristics, estimated breed, and unique identifying features.\n\n## Physical Characteristics\nOverall Appearance: The dog is medium-sized with a healthy build. It has friendly, hazel-colored eyes.\n\nCoat and Color: Its fur is short and smooth. The primary color of the coat is brown, with significant white secondary markings.\n\nDistinctive Features: The dog has long, floppy ears and a curled tail, which are prominent features.\n\n## Breed and Health Assessment\nBreed Estimation: The analysis indicates a high probability that the dog is a Beagle (78% confidence). It may also be a Beagle Mix (65% confidence).\n\nAge and Health: Based on visual cues, the dog appears to be a young adult. It looks to be in healthy physical condition.\n\n## Unique Identifying Marks\nKey Identifiers: This dog can be easily recognized by a few unique markings. It has a notable white patch on its chest and distinctive black-tipped ears.",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1680,
        1264
      ],
      "id": "b9e6d3df-ff65-421b-8f90-fb09143673ed",
      "name": "Analyze image2",
      "credentials": {
        "googlePalmApi": {
          "id": "WaVuPN6APHkiH6q8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1872,
        1104
      ],
      "id": "d7dda38f-d58e-4de0-8fcd-f382341c7c55",
      "name": "Download file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "j3IAQGD1lYDvHiOW",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dogs",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "details",
              "fieldValue": "={{ $json.content.parts[0].text }}"
            },
            {
              "fieldId": "file_name",
              "fieldValue": "={{ $('Edit Fields1').item.json.file_name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1472,
        1120
      ],
      "id": "e249b3af-7896-48d8-91c9-77db397886e8",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "pj2f5d8iVhhCRgO1",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=the image analysis \n{{ $json.content.parts[0].text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a specialized AI agent. Your sole purpose is to accurately identify a dog by matching its real-time analysis against a database of known dogs.\n\nYou will be triggered in a workflow and will receive one piece of input: a detailed text analysis of a dog from a new image. Your main goal is to find the single best match from the database and return its associated information in a structured format.\n\nTool\nYou have access to one tool: get_dog_details().\n\nFunction: This tool fetches a list of all known dog profiles from a database.\n\nOutput: It returns a list of JSON objects. Each object represents one dog and contains a details field (a descriptive text analysis) along with other data like name, place, etc.\n\nStep-by-Step Logic\nReceive Input: You will start with an input variable containing the new dog analysis text.\n\nFetch Database: Immediately call the get_dog_details() tool to retrieve the complete list of all stored dog profiles.\n\nCritical Comparison: Iterate through each dog profile returned by the tool. For each one, perform a semantic comparison between the input analysis and the details field of the stored profile.\n\nFocus on matching key, unique physical descriptors. Do not get distracted by sentence structure. Prioritize matching:\n\nCoat Color and Markings: (e.g., \"solid black\", \"light brown with white paws\", \"patchy white and grey\").\n\nHealth and Physical Condition: (e.g., \"severe skin condition\", \"stocky and overweight\", \"lean and athletic\").\n\nDistinctive Features: (e.g., \"black muzzle\", \"floppy ears\", \"significant hair loss\").\n\nIdentify Best Match: After comparing all entries, determine which stored dog profile has the highest semantic similarity to the input analysis. There will only be one correct match.\n\nOutput Requirements\nYour final output must be a single JSON object. This object must contain only the following key-value pairs for the single best-matched dog:\n\nname\n\nplace\n\nfood\n\nrelationship_status\n\nno_of_bites\n\nfriendliness_meter\n\naggressive_meter\n\nExample Output Format:\n\nJSON\n\n{\n  \"name\": \"Pinki\",\n  \"place\": \"dhwani stage\",\n  \"food\": \"puffs from gazebo\",\n  \"relationship_status\": \"single\",\n  \"no_of_bites\": 2,\n  \"friendliness_meter\": 7,\n  \"aggressive_meter\": 2\n}\nConstraints\nYou must call the get_dog_details() tool in every execution. Do not rely on memory or prior knowledge.\n\nYour output must strictly adhere to the specified JSON format.\n\nDo not include your reasoning, explanations, or any conversational text in the final output. Only the JSON object is required for the workflow to proceed."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -2016,
        352
      ],
      "id": "b7a79cc7-0a3b-48fb-aff2-f18d28d3816b",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -2080,
        608
      ],
      "id": "e331e9bc-f119-43ec-94da-5bc8c20584dd",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "WaVuPN6APHkiH6q8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "dogs",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -1904,
        608
      ],
      "id": "f19f1eb4-5912-4262-a245-8da6731dfc8c",
      "name": "get_dog_details",
      "credentials": {
        "supabaseApi": {
          "id": "pj2f5d8iVhhCRgO1",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1696,
        608
      ],
      "id": "8bac4a82-0356-486f-bed4-e014f33415b6",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -1440,
        336
      ],
      "id": "8c3c1fa8-658c-4290-94e1-dfc1ec18ce3a",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Analyze image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image1": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image2": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download file": {
      "main": [
        [
          {
            "node": "Analyze image2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "get_dog_details": {
      "ai_tool": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        []
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "5fdfa0c0-3d57-423c-98c8-20525ccf4aea",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8004a49843c5f6ffd2f1c6d98023fb3bab0d4256c07b804b76c09f8213d907d4"
  },
  "id": "lypXPLiNzEgkcJko",
  "tags": []
}